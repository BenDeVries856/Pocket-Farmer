// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for details.
/// <reference path="../../typings/tacoUtils.d.ts" />
/// <reference path="../../typings/opener.d.ts" />
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Q = require("q");
var resources = require("../resources/resourceManager");
var tacoUtility = require("taco-utils");
var opener = require("opener");
var commands = tacoUtility.Commands;
/**
 * Documentation
 *
 * Handles "taco Documentation"
 */
var Documentation = (function (_super) {
    __extends(Documentation, _super);
    function Documentation() {
        _super.apply(this, arguments);
    }
    Documentation.prototype.runCommand = function () {
        // This implementation is based on "npm docs": https://github.com/npm/npm/blob/master/lib/docs.js
        var link = resources.getString("TacoDocumentationLink");
        opener(link);
        return Q.resolve({});
    };
    Documentation.prototype.parseArgs = function (args) {
        return { options: {}, original: [], remain: [] };
    };
    return Documentation;
}(commands.TacoCommandBase));
module.exports = Documentation;

//# sourceMappingURL=docs.js.map
