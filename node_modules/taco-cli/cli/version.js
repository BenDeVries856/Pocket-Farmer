// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for details.
/// <reference path="../../typings/tacoUtils.d.ts" />
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Q = require("q");
var tacoUtility = require("taco-utils");
var commands = tacoUtility.Commands;
var logger = tacoUtility.Logger;
/**
 * Version
 *
 * handles "Taco Version"
 */
var Version = (function (_super) {
    __extends(Version, _super);
    function Version() {
        _super.apply(this, arguments);
    }
    Version.prototype.parseArgs = function (args) {
        return { options: {}, original: [], remain: [] };
    };
    /**
     * entry point for printing version
     */
    Version.prototype.runCommand = function () {
        this.printTacoVersion();
        return Q({});
    };
    /**
     * prints out Taco Version
     */
    Version.prototype.printTacoVersion = function () {
        logger.log(require("../package.json").version);
    };
    return Version;
}(commands.TacoCommandBase));
module.exports = Version;

//# sourceMappingURL=version.js.map
